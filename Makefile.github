# GitHub Template Management Makefile
# This Makefile helps manage the repository as a GitHub template

.PHONY: help setup-template create-template-repo push-template update-template clean-template

# Colors for output
CYAN := \033[36m
GREEN := \033[32m
YELLOW := \033[33m
RED := \033[31m
RESET := \033[0m

# Variables
REPO_NAME := rops_h1_poc_analytics
TEMPLATE_NAME := rewardops-analytics-poc-template
GITHUB_USER := $(shell git config user.name)
GITHUB_ORG := get10acious

help: ## Show this help message
	@echo "$(CYAN)GitHub Template Management - Available Commands:$(RESET)"
	@echo ""
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "$(GREEN)%-20s$(RESET) %s\n", $$1, $$2}'

setup-template: ## Prepare repository for GitHub template
	@if [ -d ".github" ] && [ -d ".github/workflows" ] && [ -d ".github/ISSUE_TEMPLATE" ] && [ -d ".github/PULL_REQUEST_TEMPLATE" ]; then \
		echo "$(GREEN)>>> .github template structure already exists. Skipping setup.$(RESET)"; \
		exit 0; \
	else \
		echo "$(CYAN)Setting up repository as GitHub template...$(RESET)"; \
        @echo "$(CYAN)Setting up repository as GitHub template...$(RESET)"; \
        @echo "$(YELLOW)>>> Creating .github directory structure...$(RESET)"; \
        mkdir -p .github/workflows; \
        mkdir -p .github/ISSUE_TEMPLATE; \
        mkdir -p .github/PULL_REQUEST_TEMPLATE; \
        @echo "$(GREEN)>>> Template structure created!$(RESET)"; \
    fi

create-template-repo: setup-template ## Create GitHub repository and set as template
	@echo "$(CYAN)Creating GitHub repository as template...$(RESET)"
	@echo "$(YELLOW)>>> Repository will be created at: https://github.com/$(GITHUB_ORG)/$(TEMPLATE_NAME)$(RESET)"
	@echo "$(YELLOW)>>> Make sure you have GitHub CLI installed and authenticated$(RESET)"
	@read -p "Press Enter to continue or Ctrl+C to cancel..."
	gh repo create $(GITHUB_ORG)/$(TEMPLATE_NAME) \
		--public \
		--description "GitHub template repository for building natural language analytics systems with MCP integration"
	@echo "$(GREEN)>>> Repository created!$(RESET)"

push-template: ## Push code to GitHub template repository
	@echo "$(CYAN)Pushing code to GitHub template repository...$(RESET)"
	git remote add template https://github.com/$(GITHUB_ORG)/$(TEMPLATE_NAME).git || true
	git push template main
	@echo "$(GREEN)>>> Code pushed to template repository!$(RESET)"

update-template: ## Update existing GitHub template
	@echo "$(CYAN)Updating GitHub template...$(RESET)"
	git add .
	git commit -m "Update template: $(shell date +'%Y-%m-%d %H:%M:%S')" || true
	git push template main
	@echo "$(GREEN)>>> Template updated!$(RESET)"

enable-template: ## Enable template feature on GitHub repository
	@echo "$(CYAN)Enabling template feature on GitHub repository...$(RESET)"
	@echo "$(YELLOW)>>> This must be done manually in GitHub web interface$(RESET)"
	@echo "$(YELLOW)>>> Go to: https://github.com/$(GITHUB_ORG)/$(TEMPLATE_NAME)/settings$(RESET)"
	@echo "$(YELLOW)>>> Check 'Template repository' under 'Repository name' section$(RESET)"
	@read -p "Press Enter when template feature is enabled..."



validate-template: ## Validate template structure and files
	@echo "$(CYAN)Validating template structure...$(RESET)"
	@echo "$(YELLOW)>>> Checking required files...$(RESET)"
	@test -f README.md || (echo "$(RED)ERROR: README.md not found$(RESET)" && exit 1)
	@test -f docs/AI_GUIDE.md || (echo "$(RED)ERROR: docs/AI_GUIDE.md not found$(RESET)" && exit 1)
	@test -f docs/CHALLENGE_BRIEF.md || (echo "$(RED)ERROR: docs/CHALLENGE_BRIEF.md not found$(RESET)" && exit 1)
	@test -f backend/requirements.txt || (echo "$(RED)ERROR: backend/requirements.txt not found$(RESET)" && exit 1)
	@test -f frontend/package.json || (echo "$(RED)ERROR: frontend/package.json not found$(RESET)" && exit 1)
	@test -f docker-compose.yml || (echo "$(RED)ERROR: docker-compose.yml not found$(RESET)" && exit 1)
	@test -f Makefile || (echo "$(RED)ERROR: Makefile not found$(RESET)" && exit 1)
	@echo "$(GREEN)>>> All required files found!$(RESET)"
	@echo "$(YELLOW)>>> Checking directory structure...$(RESET)"
	@test -d backend || (echo "$(RED)ERROR: backend directory not found$(RESET)" && exit 1)
	@test -d frontend || (echo "$(RED)ERROR: frontend directory not found$(RESET)" && exit 1)
	@test -d docs || (echo "$(RED)ERROR: docs directory not found$(RESET)" && exit 1)
	@test -d scripts || (echo "$(RED)ERROR: scripts directory not found$(RESET)" && exit 1)
	@echo "$(GREEN)>>> Directory structure is valid!$(RESET)"

clean-template: ## Clean up template files
	@echo "$(CYAN)Cleaning up template files...$(RESET)"
	rm -rf .github/
	rm -f template.json
	rm -f .templateignore
	@echo "$(GREEN)>>> Template files cleaned up!$(RESET)"

full-setup: setup-template validate-template ## Complete template setup
	@echo "$(GREEN)>>> Template setup completed successfully!$(RESET)"
	@echo "$(YELLOW)>>> Next steps:$(RESET)"
	@echo "$(YELLOW)   1. Run 'make create-template-repo' to create GitHub repository$(RESET)"
	@echo "$(YELLOW)   2. Run 'make push-template' to push code$(RESET)"
	@echo "$(YELLOW)   3. Run 'make enable-template' and enable template feature in GitHub$(RESET)"

# Default target
.DEFAULT_GOAL := help
